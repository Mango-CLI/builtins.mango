#!/usr/bin/env python3

"""
add

usage: mango @add [script_name] (-b, --bind [command_name ...]) (--noopen)

This is a prebuilt script and is automatically placed in /home/<usr>/.mango, aka the home mango repo.
It is called to add or edit a command within a repo.

If the script already exists, it will be opened in the default editor.
"""

from _common import (
    bindCommandsToScript,
    closestMangoRepo,
    executeIfExists,
    existRegisteredCommand,
    openInEditor,
    setSourcePolicy,
)
from _print_utils import print, fatal_error

import argparse
import os

def getEditor():
    # get the default editor from the environment variable EDITOR, or default to nano
    return os.environ.get('EDITOR', 'nano')

def add():
    parser = argparse.ArgumentParser(description="add or edit a script in a repo")
    parser.add_argument("script_name", type=str, help="the name of the script to add or edit")
    parser.add_argument("-b", "--bind", type=str, nargs='*', help="the command(s) to bind to this script (if not specified the script name will be used as the default command)")
    parser.add_argument("-s", "--source", action='store_true', help="source the script instead of executing it in a sub-shell")
    parser.add_argument("--noopen", action='store_true', help="do not open the script in the editor after creating it")
    args = parser.parse_args()
    
    # get the current repo
    try:
        current_repo = closestMangoRepo()
    except FileNotFoundError:
        fatal_error("No mango repo found.")
    
    # get the script path
    script_path = os.path.join(current_repo, '.mango', args.script_name)
    if not os.path.exists(script_path): # if the script does not exist, then create it
        print(f"Creating script at {script_path}", color='gray')
        # Create parent directories if they don't exist
        os.makedirs(os.path.dirname(script_path), exist_ok=True)
        with open(script_path, 'w'):
            pass
        # and change its permissions, defaulting to 754
        os.chmod(script_path, 0o754)
        # after this, call the hook .on-add
        executeIfExists(os.path.join(current_repo, '.mango', ".on-add"), args=[args.script_name, '' if args.bind is None else ' '.join(args.bind)])
    
    print("Editing the .instructions file", color='gray')
    if args.bind is None and not existRegisteredCommand(current_repo, args.script_name):
        print(f"No bindings specified. '{args.script_name.replace(' ', '_')}' will be configured as the default command.", color='yellow')
        to_bind = [args.script_name.replace(' ', '_')]
    else:
        to_bind = args.bind
    
    # if any of the bindings have been registered in this repo, raise an error
    if to_bind is not None:
        for command in to_bind:
            if existRegisteredCommand(current_repo, command):
                fatal_error(f"Command '{command}' is already registered in this repo. Please unbind it first.")
        # insert the bindings into .instructions
        bindCommandsToScript(repo_path=current_repo, script_name=args.script_name, command_names=to_bind)
    
    setSourcePolicy(repo_path=current_repo, script_name=args.script_name, use_source=args.source)

    # open the script in the default editor
    if not args.noopen:
        openInEditor(getEditor(), script_path)

if __name__ == '__main__':
    add()