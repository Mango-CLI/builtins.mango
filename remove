#!/usr/bin/env python3

"""
remove

usage: mango @remove [script_name] (-b, --bind [command_name ...]) (-s, --source)

This host assumes that the script to be removed is present in the closest repo, and raises an error if not.
Use 'mango @remove [script_name]' to remove all, including script and .instruction references;
Use 'mango @remove [script_name] -b' to remove all bindings of the script but keep the script itself in the repo.
Use 'mango @remove [script_name] -b [commands ...]' to remove the bindings in the list, if they exist, from the script.
Use 'mango @remove [script_name] -s' to deactivate source mode.
"""

from _common import *

import argparse
import sys, os

def rm():
    parser = argparse.ArgumentParser(description="remove a script from a repo")
    parser.add_argument("script_name", type=str)
    parser.add_argument("-b", "--bind", type=str, nargs='*')
    parser.add_argument("-s", "--source", action='store_true')
    args = parser.parse_args()
    
    try:
        current_repo = closestMangoRepo()
    except FileNotFoundError:
        print("No mango repo found. (This should already have been thrown though...)")
        return
    
    script_path = os.path.join(current_repo, '.mango', args.script_name)
    if not os.path.exists(script_path):
        print(f"No script is found at {script_path}. Use mango @list to list all you have :>", color='red', bold=True)
        return
    
    if args.bind is None and not args.source:
        # The original script would be removed
        print(f"Everything regarding script '{args.script_name}' will be removed!", color='yellow', bold=True)
        print("Are you sure to proceed? (y/N)", end=' ', color='cyan')
        if input().lower() != 'y':
            return
        os.remove(script_path)
        dereferenceScript(repo_path=current_repo, script_name=args.script_name)
    else:
        # The original script will be preserved
        # The bindings (or some of the bindings) will be removed
        if args.bind == []:
            print(f"By appending -b, all bindings regarding script '{args.script_name}' will be removed.", color='yellow', bold=True)
            print("Are you sure to proceed? (y/N)", end=' ', color='cyan')
            if input().lower() != 'y':
                return
            unbindScriptAll(repo_path=current_repo, script_name=args.script_name)
        elif args.bind is not None:
            print(f"Unbinding the following commands from script '{args.script_name}': {args.bind}", color='magenta')
            unbindScriptSelectively(repo_path=current_repo, script_name=args.script_name, command_names=args.bind)
        if args.source:
            print(f"Deactivating source mode for script '{args.script_name}'", color='magenta')
            setSourcePolicy(repo_path=current_repo, script_name=args.script_name, use_source=False)

if __name__ == '__main__':
    rm()